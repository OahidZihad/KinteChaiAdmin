{"ast":null,"code":"var _jsxFileName = \"G:\\\\CSE299\\\\KinteChaiAdmin\\\\Kinte Chai Admin\\\\kintechai-admin\\\\src\\\\Fragments\\\\HomeFragment.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Container, Backdrop, Avatar, Fab, Dialog, Slide, IconButton, Button, FormControl, InputLabel, Select, TextField, MenuItem, Toolbar, CircularProgress } from \"@material-ui/core\";\nimport BannerSlider from \"../Components/BannerSlider\";\nimport ProductView from \"../Components/ProductView\";\nimport HorizontalScroller from \"../Components/HorizontalScroller\";\nimport StripAdView from \"../Components/StripAdView\";\nimport GridView from \"../Components/GridView\";\nimport { loadCategories } from \"../Components/Actions/categoryActions\";\nimport { connect } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { Home, Add, Category, Close, Delete, ColorLens } from \"@material-ui/icons\";\nimport { loadCategoryPage } from \"../Components/Actions/categoryPageActions\";\nimport { cyan } from \"@material-ui/core/colors\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }));\n});\nexport class HomeFragment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (event, newValue) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onFieldChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.removeImage = index => {\n      let images = this.state.images;\n      let colors = this.state.colors;\n      images.splice(index, 1);\n      colors.splice(index, 1);\n      this.setState({\n        images,\n        colors\n      });\n    };\n\n    this.state = {\n      loading: true,\n      value: 0,\n      Page: \"HOME\",\n      addDialog: false,\n      images: [],\n      colors: [],\n      view_type: 0\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.categories === null) {\n      this.props.loadCategories(() => {\n        this.props.loadPage(\"HOME\", () => {\n          this.setState({\n            loading: false\n          });\n        }, () => {\n          this.setState({\n            loading: false\n          }); ////error\n        });\n      }, () => {\n        this.setState({\n          loading: false\n        }); //error handling\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"md\",\n      fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      \"aria-label\": \"scrollable auto tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, this.props.categories ? this.props.categories.map(category => /*#__PURE__*/React.createElement(Tab, {\n      icon: /*#__PURE__*/React.createElement(CategoryTab, {\n        icon: category.icon,\n        title: category.categoryName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }),\n      onClick: e => {\n        if (this.props.categoryPages[category.categoryName.toUpperCase()]) {\n          this.setState({\n            Page: category.categoryName.toUpperCase()\n          });\n        } else {\n          this.setState({\n            loading: true\n          });\n          this.props.loadPage(category.categoryName.toUpperCase(), () => {\n            this.setState({\n              loading: false,\n              Page: category.categoryName.toUpperCase()\n            });\n          }, () => {\n            this.setState({\n              loading: false\n            }); ////error\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })) : null)), this.props.categoryPages ? this.props.categoryPages[this.state.Page].map((item, index) => {\n      switch (item.view_type) {\n        case 0:\n          let banners = [];\n\n          for (let index = 1; index < item.no_of_banners + 1; index++) {\n            const banner = item[\"banner_\" + index];\n            const background = item[\"banner_\" + index + \"_background\"];\n            banners.push({\n              banner,\n              background\n            });\n          }\n\n          return /*#__PURE__*/React.createElement(BannerSlider, {\n            Images: banners,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 28\n            }\n          });\n\n        case 1:\n          return /*#__PURE__*/React.createElement(StripAdView, {\n            image: item.strip_ad_banner,\n            background: item.background,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 23\n            }\n          });\n\n        case 2:\n          let products = [];\n\n          for (let index = 1; index < item.no_of_products + 1; index++) {\n            let data = {};\n            data[\"title\"] = item[\"product_title_\" + index];\n            data[\"subtitle\"] = item[\"product_subtitle_\" + index];\n            data[\"price\"] = item[\"product_price_\" + index];\n            data[\"image\"] = item[\"product_image_\" + index];\n            products.push(data);\n          }\n\n          return /*#__PURE__*/React.createElement(HorizontalScroller, {\n            products: products,\n            title: item.layout_title,\n            background: item.layout_background,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 23\n            }\n          });\n\n        case 3:\n          let gridproducts = [];\n\n          for (let index = 1; index < 5; index++) {\n            let data = {};\n            data[\"title\"] = item[\"product_title_\" + index];\n            data[\"subtitle\"] = item[\"product_subtitle_\" + index];\n            data[\"price\"] = item[\"product_price_\" + index];\n            data[\"image\"] = item[\"product_image_\" + index];\n            gridproducts.push(data);\n          }\n\n          return /*#__PURE__*/React.createElement(GridView, {\n            products: gridproducts,\n            title: item.layout_title,\n            background: item.layout_background,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }\n          });\n\n        default:\n          break;\n      }\n    }) : null, /*#__PURE__*/React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      onClick: e => this.setState({\n        addDialog: true\n      }),\n      style: {\n        position: \"fixed\",\n        bottom: \"50px\",\n        right: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Dialog, {\n      fullScreen: true,\n      open: this.state.addDialog,\n      onClose: e => this.setState({\n        addDialog: false\n      }),\n      TransitionComponent: Transition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      onClick: e => this.setState({\n        addDialog: false\n      }),\n      \"aria-label\": \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, \"Add Section\"), /*#__PURE__*/React.createElement(Button, {\n      autoFocus: true,\n      color: \"inherit\",\n      style: {\n        position: \"absolute\",\n        right: 0\n      },\n      onClick: e => this.setState({\n        addDialog: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, \"save\"))), /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      padding: \"16px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"demo-simple-select-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, \"View Type\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      onChange: this.onFieldChange,\n      name: \"view_type\",\n      defaultValue: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, \"BANNER SLIDER\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, \"STRIP AD\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, \"HORIZONTAL SCROLLER\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, \"GRID VIEW\")), /*#__PURE__*/React.createElement(TextField, {\n      label: \"Position\",\n      id: \"outlined-size-small\",\n      variant: \"outlined\",\n      type: \"number\",\n      name: \"position\",\n      size: \"small\",\n      onChange: this.onFieldChange,\n      margin: \"dense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexWrap: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, this.state.images.map((item, index) => /*#__PURE__*/React.createElement(Box, {\n      margin: \"12px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: URL.createObjectURL(item),\n      style: {\n        height: \"90px\",\n        width: this.state.view_type === 0 ? \"160px\" : this.state.view_type === 1 ? \"210px\" : 0,\n        objectFit: \"scale-down\",\n        backgroundColor: this.state.colors[index]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"contained-button-\" + index,\n      type: \"color\",\n      hidden: true,\n      onChange: e => {\n        let colors = this.state.colors;\n        colors[index] = e.target.value;\n        this.setState({\n          colors\n        });\n      },\n      defaultValue: \"#000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      onClick: e => this.removeImage(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-\" + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ColorLens, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      id: \"contained-button-file\",\n      onChange: e => {\n        if (e.target.files && e.target.files[0]) {\n          let images = this.state.images;\n          images.push(e.target.files[0]);\n          this.setState({\n            images\n          });\n        }\n      },\n      hidden: true,\n      name: \"images\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 15\n      }\n    }), this.state.view_type === 0 && this.state.images.length < 8 ? /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, \"Add Image\")) : null, this.state.view_type === 1 && this.state.images.length < 1 ? /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, \"Add Image\")) : null, /*#__PURE__*/React.createElement(Box, {\n      style: {\n        backgroundColor: this.state.layout_bg\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"filled-basic\",\n      label: \"Title\",\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"contained-button-title\",\n      type: \"color\",\n      hidden: true,\n      onChange: this.onFieldChange,\n      name: \"layout_bg\",\n      defaultValue: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, \"Select Layout Background\"))))), /*#__PURE__*/React.createElement(Backdrop, {\n      style: {\n        zIndex: 1500\n      },\n      open: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport const CategoryTab = ({\n  icon,\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 5\n    }\n  }, icon !== \"null\" ? /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Remy Sharp\",\n    variant: \"square\",\n    src: icon,\n    style: {\n      height: \"40px\",\n      width: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }\n  }, title, \" \"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    categoryPages: state.categoryPages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadCategories: (onSuccess, onError) => dispatch(loadCategories(onSuccess, onError)),\n    loadPage: (category, onSuccess, onError) => dispatch(loadCategoryPage(category, onSuccess, onError))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFragment);","map":{"version":3,"sources":["G:/CSE299/KinteChaiAdmin/Kinte Chai Admin/kintechai-admin/src/Fragments/HomeFragment.js"],"names":["React","Component","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Container","Backdrop","Avatar","Fab","Dialog","Slide","IconButton","Button","FormControl","InputLabel","Select","TextField","MenuItem","Toolbar","CircularProgress","BannerSlider","ProductView","HorizontalScroller","StripAdView","GridView","loadCategories","connect","createStore","Home","Add","Category","Close","Delete","ColorLens","loadCategoryPage","cyan","Transition","forwardRef","props","ref","HomeFragment","constructor","handleChange","event","newValue","setState","value","onFieldChange","e","target","name","removeImage","index","images","state","colors","splice","loading","Page","addDialog","view_type","componentDidMount","categories","loadPage","render","map","category","icon","categoryName","categoryPages","toUpperCase","item","banners","no_of_banners","banner","background","push","strip_ad_banner","products","no_of_products","data","layout_title","layout_background","gridproducts","position","bottom","right","URL","createObjectURL","height","width","objectFit","backgroundColor","files","length","layout_bg","zIndex","CategoryTab","title","mapStateToProps","mapDispatchToProps","dispatch","onSuccess","onError"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  Container,\r\n  Backdrop,\r\n  Avatar,\r\n  Fab,\r\n  Dialog,\r\n  Slide,\r\n  IconButton,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  MenuItem,\r\n  Toolbar,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport BannerSlider from \"../Components/BannerSlider\";\r\nimport ProductView from \"../Components/ProductView\";\r\nimport HorizontalScroller from \"../Components/HorizontalScroller\";\r\nimport StripAdView from \"../Components/StripAdView\";\r\nimport GridView from \"../Components/GridView\";\r\nimport { loadCategories } from \"../Components/Actions/categoryActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport {\r\n  Home,\r\n  Add,\r\n  Category,\r\n  Close,\r\n  Delete,\r\n  ColorLens,\r\n} from \"@material-ui/icons\";\r\nimport { loadCategoryPage } from \"../Components/Actions/categoryPageActions\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport class HomeFragment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      value: 0,\r\n      Page: \"HOME\",\r\n      addDialog: false,\r\n      images: [],\r\n      colors: [],\r\n      view_type: 0,\r\n    };\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.categories === null) {\r\n      this.props.loadCategories(\r\n        () => {\r\n          this.props.loadPage(\r\n            \"HOME\",\r\n            () => {\r\n              this.setState({ loading: false });\r\n            },\r\n            () => {\r\n              this.setState({ loading: false });\r\n              ////error\r\n            }\r\n          );\r\n        },\r\n        () => {\r\n          this.setState({ loading: false });\r\n          //error handling\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onFieldChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  removeImage = (index) => {\r\n    let images = this.state.images;\r\n    let colors = this.state.colors;\r\n\r\n    images.splice(index, 1);\r\n    colors.splice(index, 1);\r\n\r\n    this.setState({\r\n      images,\r\n      colors,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"md\" fixed>\r\n          <AppBar position=\"static\" color=\"white\">\r\n            <Tabs\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n              aria-label=\"scrollable auto tabs example\"\r\n            >\r\n              {this.props.categories\r\n                ? this.props.categories.map((category) => (\r\n                    <Tab\r\n                      icon={\r\n                        <CategoryTab\r\n                          icon={category.icon}\r\n                          title={category.categoryName}\r\n                        />\r\n                      }\r\n                      onClick={(e) => {\r\n                        if (\r\n                          this.props.categoryPages[\r\n                            category.categoryName.toUpperCase()\r\n                          ]\r\n                        ) {\r\n                          this.setState({\r\n                            Page: category.categoryName.toUpperCase(),\r\n                          });\r\n                        } else {\r\n                          this.setState({ loading: true });\r\n                          this.props.loadPage(\r\n                            category.categoryName.toUpperCase(),\r\n                            () => {\r\n                              this.setState({\r\n                                loading: false,\r\n                                Page: category.categoryName.toUpperCase(),\r\n                              });\r\n                            },\r\n                            () => {\r\n                              this.setState({ loading: false });\r\n                              ////error\r\n                            }\r\n                          );\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))\r\n                : null}\r\n            </Tabs>\r\n          </AppBar>\r\n\r\n          {this.props.categoryPages\r\n            ? this.props.categoryPages[this.state.Page].map((item, index) => {\r\n                switch (item.view_type) {\r\n                  case 0:\r\n                    let banners = [];\r\n                    for (\r\n                      let index = 1;\r\n                      index < item.no_of_banners + 1;\r\n                      index++\r\n                    ) {\r\n                      const banner = item[\"banner_\" + index];\r\n                      const background =\r\n                        item[\"banner_\" + index + \"_background\"];\r\n                      banners.push({ banner, background });\r\n                    }\r\n                    return <BannerSlider Images={banners} />;\r\n\r\n                  case 1:\r\n                    return (\r\n                      <StripAdView\r\n                        image={item.strip_ad_banner}\r\n                        background={item.background}\r\n                      />\r\n                    );\r\n                  case 2:\r\n                    let products = [];\r\n                    for (\r\n                      let index = 1;\r\n                      index < item.no_of_products + 1;\r\n                      index++\r\n                    ) {\r\n                      let data = {};\r\n                      data[\"title\"] = item[\"product_title_\" + index];\r\n                      data[\"subtitle\"] = item[\"product_subtitle_\" + index];\r\n                      data[\"price\"] = item[\"product_price_\" + index];\r\n                      data[\"image\"] = item[\"product_image_\" + index];\r\n                      products.push(data);\r\n                    }\r\n                    return (\r\n                      <HorizontalScroller\r\n                        products={products}\r\n                        title={item.layout_title}\r\n                        background={item.layout_background}\r\n                      />\r\n                    );\r\n                  case 3:\r\n                    let gridproducts = [];\r\n                    for (let index = 1; index < 5; index++) {\r\n                      let data = {};\r\n                      data[\"title\"] = item[\"product_title_\" + index];\r\n                      data[\"subtitle\"] = item[\"product_subtitle_\" + index];\r\n                      data[\"price\"] = item[\"product_price_\" + index];\r\n                      data[\"image\"] = item[\"product_image_\" + index];\r\n                      gridproducts.push(data);\r\n                    }\r\n                    return (\r\n                      <GridView\r\n                        products={gridproducts}\r\n                        title={item.layout_title}\r\n                        background={item.layout_background}\r\n                      />\r\n                    );\r\n                  default:\r\n                    break;\r\n                }\r\n              })\r\n            : null}\r\n\r\n          <Fab\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            onClick={(e) => this.setState({ addDialog: true })}\r\n            style={{ position: \"fixed\", bottom: \"50px\", right: \"40px\" }}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n        </Container>\r\n        <Dialog\r\n          fullScreen\r\n          open={this.state.addDialog}\r\n          onClose={(e) =>\r\n            this.setState({\r\n              addDialog: false,\r\n            })\r\n          }\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={(e) =>\r\n                  this.setState({\r\n                    addDialog: false,\r\n                  })\r\n                }\r\n                aria-label=\"close\"\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n              <Typography variant=\"h6\">Add Section</Typography>\r\n              <Button\r\n                autoFocus\r\n                color=\"inherit\"\r\n                style={{ position: \"absolute\", right: 0 }}\r\n                onClick={(e) =>\r\n                  this.setState({\r\n                    addDialog: false,\r\n                  })\r\n                }\r\n              >\r\n                save\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <Toolbar />\r\n          <Box padding=\"16px\">\r\n            <FormControl>\r\n              <InputLabel id=\"demo-simple-select-label\">View Type</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                onChange={this.onFieldChange}\r\n                name=\"view_type\"\r\n                defaultValue={0}\r\n              >\r\n                <MenuItem value={0}>BANNER SLIDER</MenuItem>\r\n                <MenuItem value={1}>STRIP AD</MenuItem>\r\n                <MenuItem value={2}>HORIZONTAL SCROLLER</MenuItem>\r\n                <MenuItem value={3}>GRID VIEW</MenuItem>\r\n              </Select>\r\n\r\n              <TextField\r\n                label=\"Position\"\r\n                id=\"outlined-size-small\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                name=\"position\"\r\n                size=\"small\"\r\n                onChange={this.onFieldChange}\r\n                margin=\"dense\"\r\n              />\r\n\r\n              <Box display=\"flex\" flexWrap=\"true\">\r\n                {this.state.images.map((item, index) => (\r\n                  <Box margin=\"12px\">\r\n                    <img\r\n                      src={URL.createObjectURL(item)}\r\n                      style={{\r\n                        height: \"90px\",\r\n                        width:\r\n                          this.state.view_type === 0\r\n                            ? \"160px\"\r\n                            : this.state.view_type === 1\r\n                            ? \"210px\"\r\n                            : 0,\r\n                        objectFit: \"scale-down\",\r\n                        backgroundColor: this.state.colors[index],\r\n                      }}\r\n                    />\r\n                    <br />\r\n                    <input\r\n                      id={\"contained-button-\" + index}\r\n                      type=\"color\"\r\n                      hidden\r\n                      onChange={(e) => {\r\n                        let colors = this.state.colors;\r\n                        colors[index] = e.target.value;\r\n                        this.setState({\r\n                          colors,\r\n                        });\r\n                      }}\r\n                      defaultValue=\"#000000\"\r\n                    />\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={(e) => this.removeImage(index)}\r\n                    >\r\n                      <Delete />\r\n                    </IconButton>\r\n                    <label htmlFor={\"contained-button-\" + index}>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        aria-label=\"upload picture\"\r\n                        component=\"span\"\r\n                      >\r\n                        <ColorLens />\r\n                      </IconButton>\r\n                    </label>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n\r\n              <input\r\n                accept=\"image/*\"\r\n                id=\"contained-button-file\"\r\n                onChange={(e) => {\r\n                  if (e.target.files && e.target.files[0]) {\r\n                    let images = this.state.images;\r\n                    images.push(e.target.files[0]);\r\n                    this.setState({\r\n                      images,\r\n                    });\r\n                  }\r\n                }}\r\n                hidden\r\n                name=\"images\"\r\n                type=\"file\"\r\n              />\r\n              {this.state.view_type === 0 && this.state.images.length < 8 ? (\r\n                <label htmlFor=\"contained-button-file\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Add Image\r\n                  </Button>\r\n                </label>\r\n              ) : null}\r\n              {this.state.view_type === 1 && this.state.images.length < 1 ? (\r\n                <label htmlFor=\"contained-button-file\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Add Image\r\n                  </Button>\r\n                </label>\r\n              ) : null}\r\n\r\n              <Box style={{ backgroundColor: this.state.layout_bg }}>\r\n                <TextField id=\"filled-basic\" label=\"Title\" variant=\"filled\" />\r\n              </Box>\r\n              <input\r\n                id={\"contained-button-title\"}\r\n                type=\"color\"\r\n                hidden\r\n                onChange={this.onFieldChange}\r\n                name=\"layout_bg\"\r\n                defaultValue=\"#ffffff\"\r\n              />\r\n              <label htmlFor={\"contained-button-title\"}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  Select Layout Background\r\n                </Button>\r\n              </label>\r\n            </FormControl>\r\n          </Box>\r\n        </Dialog>\r\n        <Backdrop style={{ zIndex: 1500 }} open={this.state.loading}>\r\n          <CircularProgress color=\"primary\" />\r\n        </Backdrop>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const CategoryTab = ({ icon, title }) => {\r\n  return (\r\n    <Box textAlign=\"center\">\r\n      {icon !== \"null\" ? (\r\n        <img\r\n          alt=\"Remy Sharp\"\r\n          variant=\"square\"\r\n          src={icon}\r\n          style={{ height: \"40px\", width: \"60px\" }}\r\n        />\r\n      ) : (\r\n        <Home />\r\n      )}\r\n      <Typography variant=\"body2\" textAlign=\"center\">\r\n        {title}{\" \"}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.categories,\r\n    categoryPages: state.categoryPages,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadCategories: (onSuccess, onError) =>\r\n      dispatch(loadCategories(onSuccess, onError)),\r\n    loadPage: (category, onSuccess, onError) =>\r\n      dispatch(loadCategoryPage(category, onSuccess, onError)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFragment);\r\n"]},"metadata":{},"sourceType":"module"}