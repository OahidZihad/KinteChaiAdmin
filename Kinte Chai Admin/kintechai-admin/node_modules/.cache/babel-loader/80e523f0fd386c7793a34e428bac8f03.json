{"ast":null,"code":"var _jsxFileName = \"G:\\\\CSE299\\\\KinteChaiAdmin\\\\Kinte Chai Admin\\\\kintechai-admin\\\\src\\\\Components\\\\Authenticated.js\";\nimport React, { useState } from \"react\";\nimport { firebaseAuth } from \"../firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Authenticated = props => {\n  const [loggedIn, setloggedIn] = useState(null);\n  firebaseAuth.onAuthStateChanged(user => {\n    if (user) {\n      setloggedIn(true);\n    } else {\n      setloggedIn(false);\n    }\n  });\n\n  if (props.nonAuthenticated) {\n    if (loggedIn == null) {\n      return \"Loading...\";\n    } else if (!loggedIn) {\n      return props.children;\n    } else if (loggedIn) {\n      return null;\n    }\n  } else {\n    if (loggedIn == null) {\n      return \"Loading...\";\n    } else if (loggedIn) {\n      return props.children;\n    } else if (!loggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n};\n\nexport default Authenticated;","map":{"version":3,"sources":["G:/CSE299/KinteChaiAdmin/Kinte Chai Admin/kintechai-admin/src/Components/Authenticated.js"],"names":["React","useState","firebaseAuth","Redirect","Authenticated","props","loggedIn","setloggedIn","onAuthStateChanged","user","nonAuthenticated","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACAC,EAAAA,YAAY,CAACM,kBAAb,CAAiCC,IAAD,IAAU;AACxC,QAAIA,IAAJ,EAAU;AACRF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAND;;AAQA,MAAIF,KAAK,CAACK,gBAAV,EAA4B;AAC1B,QAAIJ,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAO,YAAP;AACD,KAFD,MAEO,IAAI,CAACA,QAAL,EAAe;AACpB,aAAOD,KAAK,CAACM,QAAb;AACD,KAFM,MAEA,IAAIL,QAAJ,EAAc;AACnB,aAAO,IAAP;AACD;AACF,GARD,MAQO;AACL,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAO,YAAP;AACD,KAFD,MAEO,IAAIA,QAAJ,EAAc;AACnB,aAAOD,KAAK,CAACM,QAAb;AACD,KAFM,MAEA,IAAI,CAACL,QAAL,EAAe;AACpB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;AACF,CA3BD;;AA6BA,eAAeF,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { firebaseAuth } from \"../firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Authenticated = (props) => {\r\n  const [loggedIn, setloggedIn] = useState(null);\r\n  firebaseAuth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      setloggedIn(true);\r\n    } else {\r\n      setloggedIn(false);\r\n    }\r\n  });\r\n\r\n  if (props.nonAuthenticated) {\r\n    if (loggedIn == null) {\r\n      return \"Loading...\";\r\n    } else if (!loggedIn) {\r\n      return props.children;\r\n    } else if (loggedIn) {\r\n      return null;\r\n    }\r\n  } else {\r\n    if (loggedIn == null) {\r\n      return \"Loading...\";\r\n    } else if (loggedIn) {\r\n      return props.children;\r\n    } else if (!loggedIn) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Authenticated;\r\n"]},"metadata":{},"sourceType":"module"}